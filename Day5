# Task 1

# Intersection of Two Arrays

class Solution:
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:
        num1=set(nums1)
        num2=set(nums2)
        return num1 & num2
   
# Task 2

# K-th Smallest Element in Sorted Matrix

class Solution:
    def kthSmallest(self, matrix: List[List[int]], k: int) -> int:
        flatten_list = [j for number in matrix for j in number] 
        flatten_list.sort()
        return flatten_list[k-1]
        
 # Task 3
 
 # First Bad Version
 
 class Solution:
    def firstBadVersion(self, n):
        """
        :type n: int
        :rtype: int
        """
        if isBadVersion(1):
            return 1

        low=1
        high=n
        while low<=high:
            mid=int((low+high)/2)
            if isBadVersion(mid)!=True:
                low=mid+1
            elif isBadVersion(mid)==True:
                if isBadVersion(mid-1)==False:
                    return mid
                else:
                    high=mid-1
                    
 # Task 4
 
 # Search Insert Position
 
 class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        for i in range(len(nums)):
            if nums[i]>=target:
                return i
        return len(nums)
